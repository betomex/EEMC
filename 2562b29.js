(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{457:function(n,t,e){n.exports=e.p+"img/ex1.26d3231.png"},458:function(n,t,e){n.exports=e.p+"img/ex2.10fa3b7.png"},459:function(n,t,e){n.exports=e.p+"img/ex3.cfed9d2.png"},491:function(n,t,e){"use strict";e.r(t);var v=e(484),_=e(483),c=e(161),r=e(482),d=e(48),o=e(457),l=e.n(o),m=e(458),f=e.n(m),x=e(459),w=e.n(x),h={name:"PracticePage",data:function(){return{image1:l.a,image2:f.a,image3:w.a}}},C=e(68),component=Object(C.a)(h,(function(){var n=this,t=n._self._c;return t(r.a,{attrs:{justify:"center",align:"center"}},[t(_.a,{attrs:{cols:"12"}},[t(v.a,[t(d.a,{staticClass:"pa-4"},[t("h1",[n._v("Практические задания")]),n._v(" "),t("hr",{staticClass:"my-3"}),n._v(" "),t("h3",{staticClass:"mb-4"},[n._v("1. Markdown editor")]),n._v(" "),t("p",[n._v("\n          Напишите программу - markdown editor. Программа должна представлять\n          из себя страницу, на которой будет текстовый редактор, в котором\n          будет реализована возможность использовать разметку. А также будет\n          экран, на котором будет отображаться преобразованный текст.\n        ")]),n._v(" "),t("p",[n._v("\n          Например, выражение вида "),t("code",[n._v("# Title")]),n._v(" будет преобразовано в\n          "),t("code",[n._v("h1")]),n._v(", а выражение "),t("code",[n._v("** text **")]),n._v(" сделает текст\n          жирным. И так далее.\n        ")]),n._v(" "),t("p",[n._v("\n          Реализуйте на выбор 10 самых основных элементов markdown синтаксиса.\n        ")]),n._v(" "),t("div",{staticClass:"d-flex justify-center"},[t(c.a,{attrs:{"max-width":"600",src:n.image1}})],1),n._v(" "),t("h3",{staticClass:"mb-4 mt-12"},[n._v("2. Таблица с сортировков и фильтрацией")]),n._v(" "),t("p",[n._v("\n          Напишите программу, которая будет являться страницей с небольшой\n          таблицей. Должны быть предусмотрены CRUD операции - добавление новых\n          элементов, редактирование и удаление.\n        ")]),n._v(" "),t("p",[n._v("\n          Также таблица должна уметь сортировать элементы по значениям\n          соответствующих столбцов по клику на них.\n        ")]),n._v(" "),t("p",[n._v("\n          Дополнительно предусмотрите возможность фильтрации выводимых строк\n          таблицы по поисковому запросу. Он может вводиться, например, через\n          текстовое поле.\n        ")]),n._v(" "),t("div",{staticClass:"d-flex justify-center"},[t(c.a,{attrs:{"max-width":"500",src:n.image2}})],1),n._v(" "),t("h3",{staticClass:"mb-4 mt-12"},[n._v("3. Древовидный список")]),n._v(" "),t("p",[n._v("\n          Напишите программу, являющуюся страницей с рекурсивным деревом\n          отображаемых значений. Дерево представляет собой структуру наподобие\n          папок и файлов.\n        ")]),n._v(" "),t("p",[n._v("\n          При нажатии на элемент он раскрывается, отображая все содержащиеся\n          внутри него элементы (может быть что угодно). Также в каждой\n          подпапке есть возможность добавить новый элемент, а при двойном\n          клике на элемент он становится новой папкой, которую можно также\n          открыть и добавлять в неё новые элементы. И так далее.\n        ")]),n._v(" "),t("p",[n._v("\n          При закрытии / раскрытии определённого элемента его структура должна\n          сохраниться.\n        ")]),n._v(" "),t("div",{staticClass:"d-flex justify-center"},[t(c.a,{attrs:{"max-width":"600",src:n.image3}})],1)])],1)],1)],1)}),[],!1,null,null,null);t.default=component.exports}}]);